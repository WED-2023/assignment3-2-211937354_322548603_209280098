require("dotenv").config();
//#region express configures
var express = require("express");
var path = require("path");
var logger = require("morgan");
const session = require("client-sessions");
const DB = require("./sql_scripts/db_connection");
var cors = require("cors");
var app = express();
app.use(logger("dev")); //logger
app.use(express.json()); // parse application/json
app.use(
    session({
        cookieName: "session", // the cookie key name
        //secret: process.env.COOKIE_SECRET, // the encryption key
        secret: "template", // the encryption key
        duration: 24 * 60 * 60 * 1000, // expired after 20 sec
        activeDuration: 1000 * 60 * 5, // if expiresIn < activeDuration,
        cookie: {
            httpOnly: false,
        }
        //the session will be extended by activeDuration milliseconds
    })
);
app.use(express.urlencoded({ extended: false })); // parse application/x-www-form-urlencoded
app.use(express.static(path.join(__dirname, "public"))); //To serve static files such as images, CSS files, and JavaScript files
//local:

//remote:
app.use(express.static(path.join(__dirname, '../assignment3_3-frontend-main/dist')));

app.get("/", function (req, res) {
    //remote:
    res.sendFile(path.join(__dirname, '../assignment3_3-frontend-main/dist/index.html'));
    //local:

});

// app.use(cors());
// app.options("*", cors());

// const corsConfig = {
//   origin: true,
//   credentials: true
// };

// app.use(cors(corsConfig));
// app.options("*", cors(corsConfig));

var port = process.env.PORT || "80"; //local=3000 remote=80
//#endregion

const user = require("./routes/user");
const recipes = require("./routes/recipes");
const auth = require("./routes/auth");
const spoonacular = require("./routes/API_spooncular/spooncular");

//#region cookie middleware
app.use(async function (req, res, next) {
    try {
        if (req.session && req.session.user_id) {
            const [users] = await DB.query("SELECT user_id FROM users");
            const match = users.find((x) => x.user_id === req.session.user_id);

            if (match) {
                req.user = { user_id: req.session.user_id };
            }
        }
        next();
    } catch (err) {
        next(err);
    }
});
//#endregion

// ----> For cheking that our server is alive
app.get("/alive", (req, res) => res.send("I'm alive"));

// Routings
app.use("/users", user);
app.use("/recipes", recipes);
app.use("/auth", auth);
app.use("/spoonacular", spoonacular);

// Default router
app.use(function (err, req, res, next) {
    console.error(err);
    res.status(err.status || 500).send({ message: err.message, success: false });
});

module.exports = app;